(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{225:function(t,e,n){"use strict";n.r(e);var a=n(2),r=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"throttle模拟实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#throttle模拟实现","aria-hidden":"true"}},[t._v("#")]),t._v(" throttle模拟实现")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("在"),n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/22",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript专题之跟着underscore学防抖》"),n("OutboundLink")],1),t._v("中，我们了解了为什么要限制事件的频繁触发，以及如何做限制：")]),t._v(" "),n("ol",[n("li",[t._v("debounce 防抖")]),t._v(" "),n("li",[t._v("throttle 节流")])]),t._v(" "),n("p",[t._v("今天重点讲讲节流的实现。")]),t._v(" "),n("h2",{attrs:{id:"节流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#节流","aria-hidden":"true"}},[t._v("#")]),t._v(" 节流")]),t._v(" "),n("p",[t._v("节流的原理很简单：")]),t._v(" "),n("p",[t._v("如果你持续触发事件，每隔一段时间，只执行一次事件。")]),t._v(" "),n("p",[t._v("根据首次是否执行以及结束后是否执行，效果有所不同，实现的方式也有所不同。\n我们用 leading 代表首次是否执行，trailing 代表结束后是否再执行一次。")]),t._v(" "),n("p",[t._v("关于节流的实现，有两种主流的实现方式，一种是使用时间戳，一种是设置定时器。")]),t._v(" "),n("h2",{attrs:{id:"使用时间戳"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用时间戳","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用时间戳")]),t._v(" "),n("p",[t._v("让我们来看第一种方法：使用时间戳，当触发事件的时候，我们取出当前的时间戳，然后减去之前的时间戳(最一开始值设为 0 )，如果大于设置的时间周期，就执行函数，然后更新时间戳为当前的时间戳，如果小于，就不执行。")]),t._v(" "),n("p",[t._v("看了这个表述，是不是感觉已经可以写出代码了…… 让我们来写第一版的代码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第一版\nfunction throttle(func, wait) {\n    var context, args;\n    var previous = 0;\n\n    return function() {\n        var now = +new Date();\n        context = this;\n        args = arguments;\n        if (now - previous > wait) {\n            func.apply(context, args);\n            previous = now;\n        }\n    }\n}\n")])])]),n("p",[t._v("例子依然是用讲 debounce 中的例子，如果你要使用：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("container.onmousemove = throttle(getUserAction, 1000);\n")])])]),n("p",[t._v("效果演示如下：")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle1.gif",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle1.gif",alt:"使用时间戳"}}),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("我们可以看到：当鼠标移入的时候，事件立刻执行，每过 1s 会执行一次，如果在 4.2s 停止触发，以后不会再执行事件。")]),t._v(" "),n("h2",{attrs:{id:"使用定时器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用定时器","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用定时器")]),t._v(" "),n("p",[t._v("接下来，我们讲讲第二种实现方式，使用定时器。")]),t._v(" "),n("p",[t._v("当触发事件的时候，我们设置一个定时器，再触发事件的时候，如果定时器存在，就不执行，直到定时器执行，然后执行函数，清空定时器，这样就可以设置下个定时器。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第二版\nfunction throttle(func, wait) {\n    var timeout;\n    var previous = 0;\n\n    return function() {\n        context = this;\n        args = arguments;\n        if (!timeout) {\n            timeout = setTimeout(function(){\n                timeout = null;\n                func.apply(context, args)\n            }, wait)\n        }\n\n    }\n}\n")])])]),n("p",[t._v("为了让效果更加明显，我们设置 wait 的时间为 3s，效果演示如下：")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle2.gif",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle2.gif",alt:"使用定时器"}}),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("我们可以看到：当鼠标移入的时候，事件不会立刻执行，晃了 3s 后终于执行了一次，此后每 3s 执行一次，当数字显示为 3 的时候，立刻移出鼠标，相当于大约 9.2s 的时候停止触发，但是依然会在第 12s 的时候执行一次事件。")]),t._v(" "),n("p",[t._v("所以比较两个方法：")]),t._v(" "),n("ol",[n("li",[t._v("第一种事件会立刻执行，第二种事件会在 n 秒后第一次执行")]),t._v(" "),n("li",[t._v("第一种事件停止触发后没有办法再执行事件，第二种事件停止触发后依然会再执行一次事件")])]),t._v(" "),n("h2",{attrs:{id:"双剑合璧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双剑合璧","aria-hidden":"true"}},[t._v("#")]),t._v(" 双剑合璧")]),t._v(" "),n("p",[t._v("那我们想要一个什么样的呢？")]),t._v(" "),n("p",[t._v("有人就说了：我想要一个有头有尾的！就是鼠标移入能立刻执行，停止触发的时候还能再执行一次！")]),t._v(" "),n("p",[t._v("所以我们综合两者的优势，然后双剑合璧，写一版代码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第三版\nfunction throttle(func, wait) {\n    var timeout, context, args, result;\n    var previous = 0;\n\n    var later = function() {\n        previous = +new Date();\n        timeout = null;\n        func.apply(context, args)\n    };\n\n    var throttled = function() {\n        var now = +new Date();\n        //下次触发 func 剩余的时间\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n         // 如果没有剩余的时间了或者你改了系统时间\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        } else if (!timeout) {\n            timeout = setTimeout(later, remaining);\n        }\n    };\n    return throttled;\n}\n")])])]),n("p",[t._v("效果演示如下：")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle3.gif",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://github.com/mqyqingfeng/Blog/raw/master/Images/throttle/throttle3.gif",alt:"throttle3"}}),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("我们可以看到：鼠标移入，事件立刻执行，晃了 3s，事件再一次执行，当数字变成 3 的时候，也就是 6s 后，我们立刻移出鼠标，停止触发事件，9s 的时候，依然会再执行一次事件。")]),t._v(" "),n("h2",{attrs:{id:"优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),n("p",[t._v("但是我有时也希望无头有尾，或者有头无尾，这个咋办？")]),t._v(" "),n("p",[t._v("那我们设置个 options 作为第三个参数，然后根据传的值判断到底哪种效果，我们约定:")]),t._v(" "),n("p",[t._v("leading：false 表示禁用第一次执行\ntrailing: false 表示禁用停止触发的回调")]),t._v(" "),n("p",[t._v("我们来改一下代码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第四版\nfunction throttle(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n        previous = options.leading === false ? 0 : new Date().getTime();\n        timeout = null;\n        func.apply(context, args);\n        if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n        var now = new Date().getTime();\n        if (!previous && options.leading === false) previous = now;\n        var remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n            if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n        }\n    };\n    return throttled;\n}\n")])])]),n("h2",{attrs:{id:"取消"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#取消","aria-hidden":"true"}},[t._v("#")]),t._v(" 取消")]),t._v(" "),n("p",[t._v("在 debounce 的实现中，我们加了一个 cancel 方法，throttle 我们也加个 cancel 方法：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 第五版 非完整代码，完整代码请查看最后的演示代码链接\n...\nthrottled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = null;\n}\n...\n")])])]),n("h2",{attrs:{id:"注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意","aria-hidden":"true"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),n("p",[t._v("我们要注意 underscore 的实现中有这样一个问题：")]),t._v(" "),n("p",[t._v("那就是 "),n("code",[t._v("leading：false")]),t._v(" 和 "),n("code",[t._v("trailing: false")]),t._v(" 不能同时设置。")]),t._v(" "),n("p",[t._v("如果同时设置的话，比如当你将鼠标移出的时候，因为 trailing 设置为 false，停止触发的时候不会设置定时器，所以只要再过了设置的时间，再移入的话，就会立刻执行，就违反了 leading: false，bug 就出来了，所以，这个 throttle 只有三种用法：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("container.onmousemove = throttle(getUserAction, 1000);\ncontainer.onmousemove = throttle(getUserAction, 1000, {\n    leading: false\n});\ncontainer.onmousemove = throttle(getUserAction, 1000, {\n    trailing: false\n});\n")])])]),n("p",[t._v("至此我们已经完整实现了一个 underscore 中的 throttle 函数，恭喜，撒花！")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/26",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文地址"),n("OutboundLink")],1)])])},[],!1,null,null,null);e.default=r.exports}}]);